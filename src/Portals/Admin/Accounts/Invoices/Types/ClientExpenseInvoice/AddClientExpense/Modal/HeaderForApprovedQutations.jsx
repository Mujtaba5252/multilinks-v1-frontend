import { Badge, Text } from "@mantine/core";
import { CircleCheck, ToiletPaper } from "tabler-icons-react";
import { MainBlue } from "../../../../../../../../Utils/ThemeColors";
import { CurrencyFormatter } from "../../../../../../../../Utils/CommonFormatters";
import { useNavigate } from "react-router-dom";
import { adminRoutes } from "../../../../../../../../routes";


export const ApprovedQuotationHeader = () => {
    const navigate = useNavigate();
    return [
        {
            name: "S.No",
            selector: (row, index) => index + 1,
            sortable: true,
            width: "80px",
        },
        {
            name: "Client ID",
            selector: (row) => row.client.UID,
            sortable: true,
            width: "130px",
            wrap: true,
        },
        {
            name: "Client Name",
            selector: (row) => row.client.client_name || 'N/A',
            sortable: true,
            wrap: true,
        },
        {
            name: "Service Type",
            selector: (row) => row.service_type,
            sortable: true,
            wrap: true,
        },
        {
            name: "Quotation",
            selector: (row) => row.quotation_ID,
            sortable: true,
            wrap: true,
        },

        {
            name: "Generated By",
            selector: (row) => row.staff.name,
            sortable: true,
            wrap: true,
        },
        {
            name: "Amount",
            selector: (row) => CurrencyFormatter(row.grand_total_numeric),
            sortable: true,
            wrap: true,
        },
        {
            name: "Invoice generated",
            selector: (row) => {
                let totalExpenseCount = 0
                let paidExpenseCount = 0
                if (row.offered_services.length > 0) {
                    row.offered_services.forEach((service) => {
                        if (service.is_paid == true) {
                            paidExpenseCount = paidExpenseCount + 1
                        }
                        totalExpenseCount = totalExpenseCount + 1
                    })
                }
                return (
                    <>
                        <Text>{paidExpenseCount}<span style={{ color: MainBlue(), fontWeight: "600" }}>/{totalExpenseCount}</span></Text>
                    </>
                )
            },
            sortable: true,
            wrap: true,
        },
        {
            name: "Actions",
            cell: (row) => {
                let totalExpenseCount = 0
                let paidExpenseCount = 0
                if (row.offered_services.length > 0) {
                    row.offered_services.forEach((service) => {
                        if (service.is_paid == true) {
                            paidExpenseCount = paidExpenseCount + 1
                        }
                        totalExpenseCount = totalExpenseCount + 1
                    })
                }
                return (
                    <>
                        {paidExpenseCount == totalExpenseCount ?
                            <CircleCheck color="green"/>
                            :
                            <ToiletPaper style={{ cursor: 'pointer' }} color={MainBlue()} onClick={() => {
                                localStorage.setItem('expenseType', JSON.stringify(row))
                                navigate(adminRoutes.addClientExpenseInvoice)
                            }} />
                        }

                    </>
                )
            },
            sortable: true,
        },
    ];
};
