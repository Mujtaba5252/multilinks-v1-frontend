import { Badge } from "@mantine/core";
import ActionIcons from "../../../../../../../Components/ActionIcons/ActionIcons";
import ApproveModalPayment from "./Modals/ApproveModalPayment";
import RejectModalPayment from "./Modals/RejectModalPayment";
import { CurrencyFormatter } from "../../../../../../../Utils/CommonFormatters";
import ReceiptPrint from "../PDF/ReceiptPrint";
import PaymentInvoiceModal from "./Modals/PaymentInvoiceModal";
import PaymentReceiptModal from "./Modals/PaymentReceiptModal";
export const PaymentViewHeader = ({ isInvoice, setUpdate }) => {
  return [
    {
      name: "S.No",
      selector: (row) => row.sNo,
      sortable: true,
      width: "80px",
    },
    {
      name: "Client ID",
      selector: (row) => row.client.UID,
      sortable: true,
      width: "130px",
      wrap: true,
    },
    {
      name: "Client Name",
      selector: (row) => row.client.client_name,
      sortable: true,
      wrap: true,
    },
    {
      name: "Service Type",
      selector: (row) => row.quotation.service_type,
      sortable: true,
      wrap: true,
    },
    {
      name: "Quotation ID",
      selector: (row) => row.quotation.quotation_ID,
      sortable: true,
      wrap: true,
    },

    {
      name: "Generated By",
      selector: (row) => row.staff.name,
      sortable: true,
      wrap: true,
    },
    {
      name: "Invoice Amount",
      width: "150px",
      selector: (row) => CurrencyFormatter(row.amount_received),
      sortable: true,
      wrap: true,
    },
    {
      name: "Status",
      selector: (row) => {
        return (
          <Badge
            style={{ cursor: "default" }}
            color={
              row.status == "Approved"
                ? "green"
                : row.status == "Pending"
                ? "yellow"
                : row.status == "Rejected"
                ? "red"
                : "blue"
            }
          >
            {row.status}
          </Badge>
        );
      },
      sortable: true,
      wrap: true,
    },
    {
      name: "Actions",
      cell: (row) => {
        return (
          <>
            {isInvoice ? (
              <ActionIcons
                Approve={true}
                Reject={true}
                ModalTitle={"Payment Invoice"}
                ViewModalComponent={<PaymentInvoiceModal />}
                ApproveModalTitle={"Approve Payment Invoice"}
                RejectModalTitle={"Reject Payment Invoice"}
                disableApproveReject={row.status == "Approved" ? true : false}
                ApproveModalComponent={
                  <ApproveModalPayment Data={row} setUpdate={setUpdate} />
                }
                RejectModalComponent={
                  <RejectModalPayment Data={row} setUpdate={setUpdate} />
                }
              />
            ) : (
              <>
                <ActionIcons
                  ModalTitle={"Payment Receipt"}
                  ViewModalComponent={<PaymentReceiptModal row={row} />}
                />
                <ReceiptPrint rowData={row} />
              </>
            )}
          </>
        );
      },
      sortable: true,
    },
  ];
};
